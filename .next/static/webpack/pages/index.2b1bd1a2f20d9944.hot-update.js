"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/OKRTree.js":
/*!*******************************!*\
  !*** ./components/OKRTree.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var reactflow__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! reactflow */ \"./node_modules/reactflow/dist/esm/index.mjs\");\n/* harmony import */ var reactflow_dist_style_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! reactflow/dist/style.css */ \"./node_modules/reactflow/dist/style.css\");\n/* harmony import */ var reactflow_dist_style_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(reactflow_dist_style_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _tree_OKRNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tree/OKRNode */ \"./components/tree/OKRNode.js\");\n/* harmony import */ var _forms_AddOKRForm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./forms/AddOKRForm */ \"./components/forms/AddOKRForm.js\");\n/* harmony import */ var _forms_AddTaskForm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./forms/AddTaskForm */ \"./components/forms/AddTaskForm.js\");\n/* harmony import */ var _lib_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../lib/api */ \"./lib/api.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n// Register custom node types\nconst nodeTypes = {\n    okrNode: _tree_OKRNode__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\n};\n// Helper function to build nodes and edges from API data\nconst buildTreeStructure = (okrsList)=>{\n    if (!okrsList || okrsList.length === 0) {\n        return {\n            nodes: [],\n            edges: []\n        };\n    }\n    // Create lookup maps\n    const okrMap = {};\n    okrsList.forEach((okr)=>{\n        okrMap[okr.okr_id] = okr;\n    });\n    // Create parent-child relationships map\n    const childrenMap = {};\n    okrsList.forEach((okr)=>{\n        if (okr.parent_okr) {\n            if (!childrenMap[okr.parent_okr]) {\n                childrenMap[okr.parent_okr] = [];\n            }\n            childrenMap[okr.parent_okr].push(okr.okr_id);\n        }\n    });\n    // Find root OKRs (those without a parent_okr)\n    const rootOKRs = okrsList.filter((okr)=>!okr.parent_okr);\n    // Node dimensions\n    const nodeWidth = 280; // Increased node width\n    const nodeHeight = 130;\n    const parentSpacing = 350; // Increased horizontal spacing between parent nodes\n    const verticalSpacing = 180; // Increased vertical spacing between levels\n    const siblingSpacing = 40; // Reduced spacing between siblings\n    // Build nodes array\n    const nodes = [];\n    const edges = [];\n    // Track node IDs to create proper edges\n    const nodeIdMap = {}; // Maps okr_id to node id in the graph\n    let nodeId = 1;\n    // Helper function to get node level (depth in hierarchy)\n    const getNodeLevel = (okr)=>{\n        let level = 1;\n        let current = okr;\n        while(current && current.parent_okr){\n            level++;\n            current = okrMap[current.parent_okr];\n        }\n        return level;\n    };\n    // Calculate total width required for siblings\n    const getSiblingsWidth = (siblingIds)=>{\n        return siblingIds.length * nodeWidth + (siblingIds.length - 1) * siblingSpacing;\n    };\n    // Process parents first, then position children directly under them\n    const processNodes = ()=>{\n        // Position root nodes with ample space between them\n        let currentX = 100;\n        rootOKRs.forEach((root, rootIndex)=>{\n            const children = childrenMap[root.okr_id] || [];\n            // Calculate width needed for children\n            const childrenWidth = getSiblingsWidth(children);\n            // Create root node\n            const rootNodeId = \"\".concat(nodeId);\n            // Position root centered above its children\n            const rootX = currentX + Math.max(nodeWidth, childrenWidth) / 2 - nodeWidth / 2;\n            // Check if this is a leaf node (no children)\n            const isLeafNode = children.length === 0;\n            nodes.push({\n                id: rootNodeId,\n                type: \"okrNode\",\n                position: {\n                    x: rootX,\n                    y: 50\n                },\n                data: {\n                    ...root,\n                    level: 1,\n                    isLeafNode\n                }\n            });\n            nodeIdMap[root.okr_id] = rootNodeId;\n            nodeId++;\n            // Process children\n            if (children.length > 0) {\n                const childY = 50 + verticalSpacing;\n                // Calculate starting X position for first child\n                let childStartX = rootX - childrenWidth / 2 + nodeWidth / 2;\n                children.forEach((childId, childIndex)=>{\n                    const child = okrMap[childId];\n                    if (!child) return;\n                    const childNodeId = \"\".concat(nodeId);\n                    const childX = childStartX + childIndex * (nodeWidth + siblingSpacing);\n                    // Check if this child has its own children\n                    const grandchildren = childrenMap[childId] || [];\n                    const isLeafNode = grandchildren.length === 0;\n                    nodes.push({\n                        id: childNodeId,\n                        type: \"okrNode\",\n                        position: {\n                            x: childX,\n                            y: childY\n                        },\n                        data: {\n                            ...child,\n                            level: 2,\n                            isLeafNode\n                        }\n                    });\n                    // Connect child to parent\n                    edges.push({\n                        id: \"e\".concat(rootNodeId, \"-\").concat(childNodeId),\n                        source: rootNodeId,\n                        target: childNodeId,\n                        type: \"smoothstep\",\n                        style: {\n                            stroke: \"#888\",\n                            strokeWidth: 2\n                        },\n                        animated: false,\n                        markerEnd: {\n                            type: \"arrowclosed\",\n                            color: \"#888\",\n                            width: 20,\n                            height: 20\n                        }\n                    });\n                    nodeIdMap[childId] = childNodeId;\n                    nodeId++;\n                    // Process grandchildren (level 3)\n                    if (grandchildren.length > 0) {\n                        const grandchildY = childY + verticalSpacing;\n                        const grandchildrenWidth = getSiblingsWidth(grandchildren);\n                        let grandchildStartX = childX - grandchildrenWidth / 2 + nodeWidth / 2;\n                        grandchildren.forEach((grandchildId, grandchildIndex)=>{\n                            const grandchild = okrMap[grandchildId];\n                            if (!grandchild) return;\n                            const grandchildNodeId = \"\".concat(nodeId);\n                            const grandchildX = grandchildStartX + grandchildIndex * (nodeWidth + siblingSpacing);\n                            // Check if this grandchild has its own children\n                            const greatGrandchildren = childrenMap[grandchildId] || [];\n                            const isLeafNode = greatGrandchildren.length === 0;\n                            nodes.push({\n                                id: grandchildNodeId,\n                                type: \"okrNode\",\n                                position: {\n                                    x: grandchildX,\n                                    y: grandchildY\n                                },\n                                data: {\n                                    ...grandchild,\n                                    level: 3,\n                                    isLeafNode\n                                }\n                            });\n                            // Connect grandchild to child\n                            edges.push({\n                                id: \"e\".concat(childNodeId, \"-\").concat(grandchildNodeId),\n                                source: childNodeId,\n                                target: grandchildNodeId,\n                                type: \"smoothstep\",\n                                style: {\n                                    stroke: \"#888\",\n                                    strokeWidth: 2\n                                },\n                                animated: false,\n                                markerEnd: {\n                                    type: \"arrowclosed\",\n                                    color: \"#888\",\n                                    width: 20,\n                                    height: 20\n                                }\n                            });\n                            nodeIdMap[grandchildId] = grandchildNodeId;\n                            nodeId++;\n                        });\n                    }\n                });\n            }\n            // Move to next root position with extra spacing\n            const rootWidth = Math.max(nodeWidth, childrenWidth);\n            currentX += rootWidth + parentSpacing;\n        });\n        // Handle any remaining unprocessed nodes (rare cases)\n        okrsList.forEach((okr)=>{\n            if (!nodeIdMap[okr.okr_id]) {\n                const level = getNodeLevel(okr);\n                const newNodeId = \"\".concat(nodeId);\n                // Determine if this is a leaf node\n                const nodeChildren = childrenMap[okr.okr_id] || [];\n                const isLeafNode = nodeChildren.length === 0;\n                nodes.push({\n                    id: newNodeId,\n                    type: \"okrNode\",\n                    position: {\n                        x: currentX,\n                        y: level * verticalSpacing\n                    },\n                    data: {\n                        ...okr,\n                        level,\n                        isLeafNode\n                    }\n                });\n                nodeIdMap[okr.okr_id] = newNodeId;\n                nodeId++;\n                // Create edge if parent exists\n                if (okr.parent_okr && nodeIdMap[okr.parent_okr]) {\n                    const parentNodeId = nodeIdMap[okr.parent_okr];\n                    edges.push({\n                        id: \"e\".concat(parentNodeId, \"-\").concat(newNodeId),\n                        source: parentNodeId,\n                        target: newNodeId,\n                        type: \"smoothstep\",\n                        style: {\n                            stroke: \"#888\",\n                            strokeWidth: 2\n                        },\n                        animated: false,\n                        markerEnd: {\n                            type: \"arrowclosed\",\n                            color: \"#888\",\n                            width: 20,\n                            height: 20\n                        }\n                    });\n                }\n                currentX += nodeWidth + 50;\n            }\n        });\n    };\n    // Run the layout algorithm\n    processNodes();\n    return {\n        nodes,\n        edges\n    };\n};\nconst OKRTree = ()=>{\n    _s();\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [okrs, setOKRs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [rootOKRs, setRootOKRs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [departments, setDepartments] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [users, setUsers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [selectedRootOKR, setSelectedRootOKR] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [nodes, setNodes, onNodesChange] = (0,reactflow__WEBPACK_IMPORTED_MODULE_7__.useNodesState)([]);\n    const [edges, setEdges, onEdgesChange] = (0,reactflow__WEBPACK_IMPORTED_MODULE_7__.useEdgesState)([]);\n    const [showAddOKRForm, setShowAddOKRForm] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showAddTaskForm, setShowAddTaskForm] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [selectedNode, setSelectedNode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [selectedNodeId, setSelectedNodeId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [selectedNodeChildren, setSelectedNodeChildren] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Define a set of distinct colors for different parent node groups\n    const borderColors = [\n        \"border-blue-500\",\n        \"border-green-500\",\n        \"border-purple-500\",\n        \"border-pink-500\",\n        \"border-yellow-500\",\n        \"border-red-500\",\n        \"border-indigo-500\",\n        \"border-orange-500\"\n    ];\n    // Generate color mapping for root nodes\n    const [colorMap, setColorMap] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    // Fetch all required data with improved error handling\n    const fetchInitialData = async function() {\n        let retryCount = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;\n        setIsLoading(true);\n        setError(null);\n        try {\n            // Try to fetch departments\n            let departmentsData = [];\n            try {\n                departmentsData = await _lib_api__WEBPACK_IMPORTED_MODULE_6__[\"default\"].getDepartments();\n                console.log(\"Fetched departments:\", departmentsData);\n                setDepartments(departmentsData);\n            } catch (deptError) {\n                var _deptError_response_data, _deptError_response;\n                console.error(\"Error fetching departments:\", deptError);\n                setError(\"Failed to load departments. \" + (((_deptError_response = deptError.response) === null || _deptError_response === void 0 ? void 0 : (_deptError_response_data = _deptError_response.data) === null || _deptError_response_data === void 0 ? void 0 : _deptError_response_data.detail) || \"\"));\n                throw deptError;\n            }\n            // Try to fetch users\n            let usersData = [];\n            try {\n                usersData = await _lib_api__WEBPACK_IMPORTED_MODULE_6__[\"default\"].getUsers();\n                console.log(\"Fetched users:\", usersData);\n                setUsers(usersData);\n            } catch (usersError) {\n                var _usersError_response_data, _usersError_response;\n                console.error(\"Error fetching users:\", usersError);\n                setError(\"Failed to load users. \" + (((_usersError_response = usersError.response) === null || _usersError_response === void 0 ? void 0 : (_usersError_response_data = _usersError_response.data) === null || _usersError_response_data === void 0 ? void 0 : _usersError_response_data.detail) || \"\"));\n                throw usersError;\n            }\n            // Try to fetch all OKRs\n            try {\n                const okrsData = await _lib_api__WEBPACK_IMPORTED_MODULE_6__[\"default\"].getOKRs();\n                console.log(\"Fetched OKRs:\", okrsData);\n                setOKRs(okrsData);\n                // Extract root OKRs here to ensure they're set immediately\n                if (okrsData && okrsData.length > 0) {\n                    const rootOkrs = okrsData.filter((okr)=>!okr.parent_okr);\n                    console.log(\"Found root OKRs:\", rootOkrs);\n                    setRootOKRs(rootOkrs);\n                    // Set the first root OKR as selected by default\n                    if (rootOkrs.length > 0) {\n                        setSelectedRootOKR(rootOkrs[0].okr_id);\n                    }\n                }\n            } catch (okrsError) {\n                var _okrsError_response_data, _okrsError_response;\n                console.error(\"Error fetching OKRs:\", okrsError);\n                setError(\"Failed to load OKR data. \" + (((_okrsError_response = okrsError.response) === null || _okrsError_response === void 0 ? void 0 : (_okrsError_response_data = _okrsError_response.data) === null || _okrsError_response_data === void 0 ? void 0 : _okrsError_response_data.detail) || \"\"));\n                throw okrsError;\n            }\n            setIsLoading(false);\n        } catch (error) {\n            // This will only run if one of the above requests failed and wasn't handled\n            console.error(\"Error fetching initial data:\", error);\n            // Auto-retry up to 3 times with increasing delay\n            if (retryCount < 3) {\n                console.log(\"Retrying (\".concat(retryCount + 1, \"/3) in \").concat((retryCount + 1) * 2, \" seconds...\"));\n                setError(\"Failed to load data. Retrying (\".concat(retryCount + 1, \"/3)...\"));\n                // Retry with exponential backoff\n                setTimeout(()=>{\n                    fetchInitialData(retryCount + 1);\n                }, (retryCount + 1) * 2000);\n                return;\n            }\n            if (!error) {\n                setError(\"Failed to load data. Please refresh the page or try again later.\");\n            }\n            setIsLoading(false);\n        }\n    };\n    // Initial data loading\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchInitialData();\n    }, []);\n    // Build tree when OKRs or current department changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (okrs.length > 0) {\n            let filteredOKRs = okrs;\n            if (selectedRootOKR) {\n                // Find the selected root OKR\n                const rootOkr = okrs.find((okr)=>okr.okr_id === selectedRootOKR);\n                if (rootOkr) {\n                    // Build a tree with only this root OKR and its descendants\n                    const isDescendant = (okr)=>{\n                        if (okr.okr_id === selectedRootOKR) return true;\n                        if (!okr.parent_okr) return false;\n                        // Check if this OKR's parent is the selected root or a descendant of it\n                        const parent = okrs.find((o)=>o.okr_id === okr.parent_okr);\n                        return parent ? isDescendant(parent) : false;\n                    };\n                    filteredOKRs = okrs.filter(isDescendant);\n                }\n            }\n            const { nodes: newNodes, edges: newEdges } = buildTreeStructure(filteredOKRs);\n            setNodes(newNodes);\n            setEdges(newEdges);\n        }\n    }, [\n        okrs,\n        selectedRootOKR,\n        setNodes,\n        setEdges\n    ]);\n    // Reset selection when department changes or tree refreshes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setSelectedNodeId(null);\n        setSelectedNodeChildren([]);\n        // Reset selection state for all nodes\n        if (nodes.length > 0) {\n            setNodes((prevNodes)=>prevNodes.map((n)=>({\n                        ...n,\n                        data: {\n                            ...n.data,\n                            isSelected: false,\n                            isChildOfSelected: false\n                        }\n                    })));\n        }\n    }, [\n        okrs,\n        selectedRootOKR,\n        setNodes\n    ]);\n    // Find all children of a given node\n    const findAllChildNodes = (nodeId)=>{\n        // Get all edges where this node is the source\n        const childEdges = edges.filter((edge)=>edge.source === nodeId);\n        // Get all target nodes from those edges\n        const directChildren = childEdges.map((edge)=>edge.target);\n        // Recursively find children of children\n        let allChildren = [\n            ...directChildren\n        ];\n        directChildren.forEach((childId)=>{\n            const grandchildren = findAllChildNodes(childId);\n            allChildren = [\n                ...allChildren,\n                ...grandchildren\n            ];\n        });\n        return allChildren;\n    };\n    // Find the root ancestor of a node\n    const findRootAncestor = (nodeId)=>{\n        // If this is already a root node (no incoming edges), return itself\n        if (!edges.some((edge)=>edge.target === nodeId)) {\n            return nodeId;\n        }\n        // Find the parent of this node\n        const parentEdge = edges.find((edge)=>edge.target === nodeId);\n        if (!parentEdge) return nodeId; // Safety check\n        // Recursively find the root ancestor\n        return findRootAncestor(parentEdge.source);\n    };\n    // Handle node click\n    const onNodeClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((_, node)=>{\n        setSelectedNode(node);\n        setSelectedNodeId(node.id);\n        // Find all child nodes\n        const childNodes = findAllChildNodes(node.id);\n        setSelectedNodeChildren(childNodes);\n        // Find the root ancestor to determine the color\n        const rootAncestor = findRootAncestor(node.id);\n        const color = colorMap[rootAncestor] || borderColors[0]; // Default to first color if no mapping\n        // Update all nodes to include isSelected, isChildOfSelected, and borderColor properties\n        setNodes((prevNodes)=>prevNodes.map((n)=>{\n                // Find this node's root ancestor for coloring\n                const nodeRootAncestor = findRootAncestor(n.id);\n                return {\n                    ...n,\n                    data: {\n                        ...n.data,\n                        isSelected: n.id === node.id,\n                        isChildOfSelected: childNodes.includes(n.id),\n                        borderColor: colorMap[nodeRootAncestor] || \"border-gray-300\" // Use gray as default\n                    }\n                };\n            }));\n    }, [\n        edges,\n        setNodes,\n        colorMap,\n        borderColors\n    ]);\n    // Handle add OKR form submission\n    const handleAddOKR = async (formData)=>{\n        setIsLoading(true);\n        try {\n            // Prepare data for API\n            const apiData = {\n                name: formData.title,\n                description: formData.description,\n                assumptions: formData.assumptions,\n                parent_okr: formData.parent_okr,\n                assigned_to: formData.assigned_to,\n                department: formData.department,\n                start_date: formData.start_date,\n                due_date: formData.due_date,\n                status: formData.status,\n                progress_percent: formData.progress_percent,\n                // Make sure these are arrays, even if they're empty\n                business_unit_ids: Array.isArray(formData.business_unit_ids) ? formData.business_unit_ids : [],\n                assigned_user_ids: Array.isArray(formData.assigned_user_ids) ? formData.assigned_user_ids : [\n                    formData.assigned_to\n                ],\n                primary_user_id: formData.primary_user_id\n            };\n            console.log(\"Sending OKR data to API:\", apiData);\n            // Create new OKR\n            const newOKR = await _lib_api__WEBPACK_IMPORTED_MODULE_6__[\"default\"].createOKR(apiData);\n            // Update the OKRs list\n            setOKRs((prev)=>[\n                    ...prev,\n                    newOKR\n                ]);\n            setShowAddOKRForm(false);\n            setSelectedNode(null);\n            setIsLoading(false);\n        } catch (error) {\n            var _error_response, _error_response1;\n            console.error(\"Error creating OKR:\", error);\n            console.error(\"Error details:\", ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.data) || \"No detailed error data available\");\n            // Show a more informative error message\n            let errorMessage = \"Failed to create OKR. \";\n            if ((_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : _error_response1.data) {\n                errorMessage += JSON.stringify(error.response.data, null, 2);\n            } else {\n                errorMessage += error.message || \"Please try again.\";\n            }\n            alert(errorMessage);\n            setIsLoading(false);\n        }\n    };\n    // Handle add task form submission\n    const handleAddTask = async (formData)=>{\n        setIsLoading(true);\n        try {\n            // Log the raw form data from the form\n            console.log(\"Raw form data:\", formData);\n            // Map form data to API expected format\n            const apiData = {\n                title: formData.title,\n                description: formData.description,\n                assigned_to: parseInt(formData.assignedTo),\n                linked_to_okr: parseInt(formData.linkedToOkr),\n                start_date: formData.startDate || new Date().toISOString().split(\"T\")[0],\n                due_date: formData.dueDate,\n                // Pass the actual status value from the form instead of converting to boolean\n                status: parseInt(formData.status),\n                // Calculate progress percent based on status\n                // If status is 0 (Completed), set progress to 100%, otherwise calculate based on status\n                progress_percent: parseInt(formData.status) === 0 ? 100 : parseInt(formData.status) === 1 ? 50 : 0 // 50% for In Progress, 0% for others\n            };\n            // Log the data that will be sent to the API\n            console.log(\"Sending task data to API:\", apiData);\n            // Create new task\n            await _lib_api__WEBPACK_IMPORTED_MODULE_6__[\"default\"].createTask(apiData);\n            setShowAddTaskForm(false);\n            setSelectedNode(null);\n            setIsLoading(false);\n        // No need to update nodes as tasks are fetched when viewing an OKR\n        } catch (error) {\n            var _error_response;\n            console.error(\"Error creating task:\", error);\n            console.error(\"Error details:\", ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.data) || \"No detailed error data available\");\n            alert(\"Failed to create task. Please try again.\");\n            setIsLoading(false);\n        }\n    };\n    // Update color mapping when nodes change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (nodes.length > 0) {\n            // Find root nodes (those with no incoming edges)\n            const rootNodeIds = nodes.filter((node)=>!edges.some((edge)=>edge.target === node.id)).map((node)=>node.id);\n            // Create a mapping of root node to color\n            const newColorMap = {};\n            rootNodeIds.forEach((nodeId, index)=>{\n                newColorMap[nodeId] = borderColors[index % borderColors.length];\n            });\n            setColorMap(newColorMap);\n        }\n    }, [\n        nodes,\n        edges\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full h-[80vh] border rounded-lg overflow-hidden\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"h-16 bg-gray-50 border-b flex items-center justify-between px-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                className: \"text-lg font-semibold\",\n                                children: \"OKR Tree\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                                lineNumber: 602,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"ml-4\",\n                                children: rootOKRs.length > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                    value: selectedRootOKR || \"\",\n                                    onChange: (e)=>setSelectedRootOKR(Number(e.target.value) || null),\n                                    className: \"px-3 py-1 border rounded-md bg-white\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                            value: \"\",\n                                            children: \"All Objectives\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                                            lineNumber: 610,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        rootOKRs.map((okr)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                value: okr.okr_id,\n                                                children: okr.name\n                                            }, okr.okr_id, false, {\n                                                fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                                                lineNumber: 612,\n                                                columnNumber: 19\n                                            }, undefined))\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                                    lineNumber: 605,\n                                    columnNumber: 15\n                                }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-sm text-gray-500\",\n                                    children: \"No root objectives available\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                                    lineNumber: 618,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                                lineNumber: 603,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                        lineNumber: 601,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>{\n                                    setSelectedNode(null);\n                                    setShowAddOKRForm(true);\n                                },\n                                className: \"px-3 py-1 bg-primary text-white rounded-md mr-2\",\n                                disabled: isLoading,\n                                children: \"Add Root Objective\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                                lineNumber: 624,\n                                columnNumber: 11\n                            }, undefined),\n                            selectedNode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>setShowAddOKRForm(true),\n                                        className: \"px-3 py-1 bg-green-600 text-white rounded-md mr-2\",\n                                        disabled: isLoading,\n                                        children: \"Add Sub-Objective\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                                        lineNumber: 636,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>setShowAddTaskForm(true),\n                                        className: \"px-3 py-1 bg-blue-600 text-white rounded-md\",\n                                        disabled: isLoading,\n                                        children: \"Add Task\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                                        lineNumber: 643,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                        lineNumber: 623,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                lineNumber: 600,\n                columnNumber: 7\n            }, undefined),\n            isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center justify-center h-full\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"text-lg text-gray-500\",\n                    children: \"Loading OKR data...\"\n                }, void 0, false, {\n                    fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                    lineNumber: 657,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                lineNumber: 656,\n                columnNumber: 9\n            }, undefined),\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-col items-center justify-center h-full\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-lg text-red-500 mb-4\",\n                        children: error\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                        lineNumber: 663,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: fetchInitialData,\n                        className: \"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\",\n                        children: \"Retry\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                        lineNumber: 664,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm text-gray-500 mt-2\",\n                        children: \"If the problem persists, please check your API configuration and network connection.\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                        lineNumber: 670,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                lineNumber: 662,\n                columnNumber: 9\n            }, undefined),\n            !isLoading && !error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(reactflow__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                nodes: nodes,\n                edges: edges,\n                onNodesChange: onNodesChange,\n                onEdgesChange: onEdgesChange,\n                onNodeClick: onNodeClick,\n                nodeTypes: nodeTypes,\n                fitView: true,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(reactflow__WEBPACK_IMPORTED_MODULE_7__.Background, {}, void 0, false, {\n                        fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                        lineNumber: 686,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(reactflow__WEBPACK_IMPORTED_MODULE_7__.Controls, {}, void 0, false, {\n                        fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                        lineNumber: 687,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                lineNumber: 677,\n                columnNumber: 9\n            }, undefined),\n            showAddOKRForm && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n                onClick: (e)=>e.stopPropagation(),\n                onWheel: (e)=>e.stopPropagation(),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bg-white p-6 rounded-lg w-full max-w-md max-h-[90vh] overflow-y-auto\",\n                    onClick: (e)=>e.stopPropagation(),\n                    onWheel: (e)=>e.stopPropagation(),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"text-xl font-semibold mb-4\",\n                            children: selectedNode ? \"Add Sub-Objective\" : \"Add Root Objective\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                            lineNumber: 703,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_forms_AddOKRForm__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            parentNode: selectedNode,\n                            users: users,\n                            departments: departments,\n                            onSubmit: handleAddOKR,\n                            onCancel: ()=>{\n                                setShowAddOKRForm(false);\n                                setSelectedNode(null);\n                            }\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                            lineNumber: 706,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                    lineNumber: 698,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                lineNumber: 693,\n                columnNumber: 9\n            }, undefined),\n            showAddTaskForm && selectedNode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n                onClick: (e)=>e.stopPropagation(),\n                onWheel: (e)=>e.stopPropagation(),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bg-white p-6 rounded-lg w-full max-w-md max-h-[90vh] overflow-y-auto\",\n                    onClick: (e)=>e.stopPropagation(),\n                    onWheel: (e)=>e.stopPropagation(),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"text-xl font-semibold mb-4\",\n                            children: [\n                                'Add Task to \"',\n                                selectedNode.data.name || selectedNode.data.title,\n                                '\"'\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                            lineNumber: 732,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_forms_AddTaskForm__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                            okrId: selectedNode.data.okr_id || selectedNode.data.okrId,\n                            users: users,\n                            okrs: okrs,\n                            onSubmit: handleAddTask,\n                            onCancel: ()=>{\n                                setShowAddTaskForm(false);\n                                setSelectedNode(null);\n                            }\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                            lineNumber: 735,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                    lineNumber: 727,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n                lineNumber: 722,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\Codes\\\\Frontend\\\\OKR frontend\\\\components\\\\OKRTree.js\",\n        lineNumber: 599,\n        columnNumber: 5\n    }, undefined);\n};\n_s(OKRTree, \"rsYD12XFP2FrdVp3ZtDSug/fLxY=\", false, function() {\n    return [\n        reactflow__WEBPACK_IMPORTED_MODULE_7__.useNodesState,\n        reactflow__WEBPACK_IMPORTED_MODULE_7__.useEdgesState\n    ];\n});\n_c = OKRTree;\n/* harmony default export */ __webpack_exports__[\"default\"] = (OKRTree);\nvar _c;\n$RefreshReg$(_c, \"OKRTree\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/OKRTree.js\n"));

/***/ })

});